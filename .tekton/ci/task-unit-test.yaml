apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: unit-test-task
spec:
  params:
    - name: continuous-delivery-context-secret
      description: name of the configmap containing the continuous delivery pipeline context secrets
      default: cd-secret
  results:
    - name: test-status
      description: Test status
    - name: file-locations
      description: Semi-colon separated list of test result file locations
    - name: test-types
      description: Semi-colon separated list of test result types
  workspaces:
    - name: artifacts
      description: the artifacts folder for this task
      mountPath: /artifacts
  steps:
    - name: run-tests
      image: ibmcom/pipeline-base-image
      workingDir: /artifacts
      env:
        - name: IBM_CLOUD_API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: API_KEY
              optional: true
      script: |
          #!/bin/bash
          set -e -o pipefail
          ##########################################################################
          # Setting HOME explicitly to have ibmcloud plugins available
          # doing the export rather than env definition is a workaround
          # until https://github.com/tektoncd/pipeline/issues/1836 is fixed
          # and until 0.11 - https://ibm.ent.box.com/notes/599948660131?s=rqk76zkkdsz1cenvpw0ad8enxul6j0nv
          export HOME=/root && source ~/.nvm/nvm.sh
          ##########################################################################
          FILE_LOCATIONS=""
          TEST_TYPES=""
          TEST_STATUS=0
          pwd
          ls -al
          if [ -f ./tests/run-tests.sh ]; then
            source ./tests/run-tests.sh
          else
            echo "Test runner script not found: ./tests/run-tests.sh"
          fi
          # Record task results
          echo -n "${TEST_STATUS}" > $(results.test-status.path)
          echo -n "${FILE_LOCATIONS}" > $(results.file-locations.path)
          echo -n "${TEST_TYPES}" > $(results.test-types.path)
      volumeMounts:
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
          - key: toolchain.json
            path: toolchain.json